1.在决定round number的时候，正常情况在D节点的图谱中有了D2 Event，那么因为第一个Strong See，
  所以该新启一层Round了，那么如果这个时候D2节点发生网络故障，长时间不能把图谱传给其他节点，其他节点就因为别的Event产生Strong See会选出新的Round，
  当出现不同节点的Round number冲突的时候.如何进行。
2.PROOF:(1) 如果所有的节点都诚实，那么所有成员的图谱一致而且只有在恶意节点故意向不同的节点发送有冲突的图谱同步才会导致分叉的情况出现。
即便是在这种情况下，只要恶意节点不超过1/3，仍然不会影响算法核心的Round决策、Witness和Famous Witness的选举，算法仍然是成立的。
paper中的证明如下：
(1) 全网大多数节点2/3为诚实节点:
(2) 如果一对Event<x, y>是一个分叉，并且E<x>被HG<Alice>中的E<z> StrongSee，那么E<y>不会被任何HG<Bob>中与HG<Alice>相一致的Event StrongSee.
(3) 如果HG<Alice>和HG<Bob>是一致的并且都包含Event<x>, 那么会对E<x>确认相同的Round Number.
证明(1)、(2)、(3)表明了只要恶意分叉节点不超过全网的1/3，那么算法仍可以正常运作。
